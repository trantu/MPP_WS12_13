#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass article
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format default
\output_sync 1
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry true
\use_amsmath 1
\use_esint 1
\use_mhchem 1
\use_mathdots 1
\cite_engine basic
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\topmargin 2cm
\bottommargin 2cm
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
Mikroprozessorpraktikum WS 12/13
\end_layout

\begin_layout Author
Carlos Martín Nieto, Simon Hohberg, Tu Tran
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
setcounter{section}{1}
\end_layout

\end_inset


\end_layout

\begin_layout Section
Clock System
\end_layout

\begin_layout Subsection
Taktfrequenz
\end_layout

\begin_layout Subsubsection
Bestimmen Sie messtechnisch (mit HM8021 1.6GHz Counter) die Frequenz der
 LFXT1CLK und XT2CLK Taktquelle.
\end_layout

\begin_layout Itemize
LFXT1CLK: 32,7691 kHz
\end_layout

\begin_layout Itemize
XT2CLK: 7,37331 MHz
\end_layout

\begin_layout Subsubsection
Bestimmen Sie messtechnisch die minimale und maximale Taktfrequenz des MCLK-Takt
es, die sich auf Basis der LFXT1CLK-, XT2CLK- und DCOCLK-Taktquellen bereitstell
en läßt.
 Belegen Sie die Messergebnisse mit einer Berechnung auf Basis aller Komponenten
 aus den nebenstehenden Blockschaltbildern.
 Beachten Sie dabei den Einfluss der DIVMx Bits und des DCOR Bits.
\end_layout

\begin_layout Itemize
XT2CLK
\end_layout

\begin_deeper
\begin_layout Itemize
max: 7.37331 MHz
\end_layout

\begin_layout Itemize
min: 921,663 kHz (Divider = 8)
\end_layout

\begin_layout Itemize

\series bold
Berechnung:
\series default
 Über SELM0 = 0 und SELM1 = 1 wird die XT2CLK als Taktquelle für die MCLK
 verwendet.
 Der XT2 Oszillator der XT2CLK liefert einen Takt von bis zu 8 MHz.
 Dieser lässt sich nicht weiter erhöhen und ist daher die maximale Taktrate.
 Durch Verwendung des MCLK Dividers (DIVMx) lässt sich der Takt verringern.
 Der größte Divider ist 8, wodurch sich eine minimale Taktrate von etwa
 
\begin_inset Formula $8\, MHz\cdot\frac{1}{8}=1\, MHz$
\end_inset

 ergibt.
\end_layout

\end_deeper
\begin_layout Itemize
LFXT1CLK
\end_layout

\begin_deeper
\begin_layout Itemize
max: 32,7691 kHz
\end_layout

\begin_layout Itemize
min: 4,09614 kHz (Divider = 8)
\end_layout

\begin_layout Itemize

\series bold
Berechnung:
\series default
 Über SELM0 = 1 und SELM1 = 1 wird die LFT1CLK als Taktquelle für die MCLK
 verwendet.
 Der LFXT1 Oszillator der LFXT1CLK liefert einen Takt von 32786 Hz.
 Dieser lässt sich nicht weiter erhöhen und ist daher die maximale Taktrate.
 Durch Verwendung des MCLK Dividers (DIVMx) lässt sich der Takt verringern.
 Der größte Divider ist 8, wodurch sich eine minimale Taktrate von 
\begin_inset Formula $32786\, Hz\cdot\frac{1}{8}=4098\, Hz$
\end_inset

 ergibt.
\end_layout

\end_deeper
\begin_layout Itemize
DCOCLK
\end_layout

\begin_deeper
\begin_layout Itemize
max: 7,33 MHz (DCOR = 1)
\end_layout

\begin_layout Itemize
min: 205,32 kHz (DCOR = 0, Divider = 8)
\end_layout

\begin_layout Itemize

\series bold
Berechnung:
\series default
 Über SELM0 = 1 oder 0 und SELM1 = 0 wird die DCOCLK als Taktquelle für
 die MCLK verwendet.
 Der digitale Oszillator DCO liefert mit dem externen Widerstand einen Takt
 von 7,33 MHz.
 Dieser lässt sich nicht weiter erhöhen und ist daher die maximale Taktrate.
 Durch Verwendung des MCLK Dividers (DIVMx) lässt sich der Takt verringern.
 Der größte Divider ist 8, wodurch sich eine minimale Taktrate von 
\begin_inset Formula $32786\, Hz\cdot\frac{1}{8}=4098\, Hz$
\end_inset

 ergibt.
\end_layout

\end_deeper
\begin_layout Subsubsection
An P2.5 ist ein Oszillatorwiderstand ROSC von 39kOhm angeschlossen.
 Erläutern Sie, wie der externe Widerstand für den DCOCLK-Taktgenerator
 aktiviert wird.
\end_layout

\begin_layout Standard
Dieser wird über das Setzen von DCOR aktiviert, wie in dem Schaltplan zu
 sehen ist.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename 2.1.3schaltplan.png
	scale 50

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
Beschaltung der Clocks
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Welchen Einfluss hat der Widerstand auf den DCOCLK-Taktgenerator?
\end_layout

\begin_layout Standard
Der Widerstand erhöht den Takt, macht ihn jedoch auch ungenauer (im 10 kHz
 Bereich).
 Der Digitale Oszillator der den Takt für die DCOCLK erzeugt verwendet den
 Betriebsstrom.
 Der digital erzeugte Takt ist abhängig vom internen Widerstand des digitalen
 Oszillators.
 Über DCOR kann nun an Stelle von diesem internen Widerstand (
\begin_inset Formula $\sim300k\Omega$
\end_inset

) ein externer Widerstand (hier 
\begin_inset Formula $39k\Omega$
\end_inset

) verwendet werden, wodurch sich der erzeugte Takt erhöht.
\end_layout

\begin_layout Subsection
Stromverbrauch
\end_layout

\begin_layout Subsubsection
Der MCLK-Takt soll durch den DCOCLK-Taktgenerator bereitgestellt werden.
 Ermitteln Sie für diesen Fall die Abhängigkeit des Stromverbrauchs von
 der Taktfrequenz.
 Stellen Sie die Abhängigkeit für ca.
 10 unterschiedliche Taktfrequenzen im Bereich zwischen 100kHz und 10MHz
 grafisch dar.
 Messen Sie die Taktfrequenzen wie in Aufgabe A 2.1.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename stromverbrauch.png
	scale 90

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
Stromverbrauch
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Taktumschaltung
\end_layout

\begin_layout Subsubsection
Entwickeln Sie ein Programm, das auf Tastendruck die MCLK-Taktfrequenz der
 CPU des Mikrocontrollers zwischen 4,096kHz und 7,3728 MHz umschaltet.
 Die XT2CLK-Taktquelle darf nicht eingesetzt werden.
 Nur LFXT1CLK- und DCOCLK-Takquelle dürfen eingesetzt werden.
 Kontrollieren Sie messtechnisch (wie in A 2.1) den Frequenzwechsel und bestimmen
 Sie den jeweiligen Stromverbrauch des MSB430H (wie in A 2.2).
 Dokumentieren Sie ihre Lösung und die Messergebnisse.
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "basicstyle={\footnotesize},frame=single,language=C,numbers=left,tabsize=2"
inline false
status open

\begin_layout Plain Layout

while(1){
\end_layout

\begin_layout Plain Layout

	int  pressed = P1IN & (TASTE_LINKS | TASTE_RECHTS);
\end_layout

\begin_layout Plain Layout

	if (pressed) {
\end_layout

\begin_layout Plain Layout

			fast = !fast;
\end_layout

\begin_layout Plain Layout

		while (P1IN & (TASTE_LINKS | TASTE_RECHTS)) {}
\end_layout

\begin_layout Plain Layout

	}
\end_layout

\begin_layout Plain Layout

	if (fast) {
\end_layout

\begin_layout Plain Layout

		// waehle DCOCLK und setze divider auf 1
\end_layout

\begin_layout Plain Layout

		DCO();
\end_layout

\begin_layout Plain Layout

		BIT_CLR(BCSCTL2, DIVM0 | DIVM1);	
\end_layout

\begin_layout Plain Layout

	} else {
\end_layout

\begin_layout Plain Layout

		// waehle LFXT1CLK und groesstmoeglichen divider
\end_layout

\begin_layout Plain Layout

		BIT_SET(BCSCTL2, SELM0 | SELM1);
\end_layout

\begin_layout Plain Layout

		BIT_SET(BCSCTL2, DIVM0 | DIVM1);
\end_layout

\begin_layout Plain Layout

	}
\end_layout

\begin_layout Plain Layout

}	// Ende der Endlosschleife
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
LFXT1CLK mit 4,09 kHz
\end_layout

\begin_deeper
\begin_layout Itemize
Taktmessung: 4,0961 kHz
\end_layout

\begin_layout Itemize
Stromverbrauch: 1,41 mA
\end_layout

\end_deeper
\begin_layout Itemize
DCOCLK mit 7,3728 MHz
\end_layout

\begin_deeper
\begin_layout Itemize
Taktmessung: 7,385 MHz
\end_layout

\begin_layout Itemize
Stromverbrauch: 5,87 mA
\end_layout

\end_deeper
\begin_layout Subsubsection
Welche Schlußfolgerungen hinsichtlich des Energieverbrauches ziehen Sie?
 Berechnen Sie für beide gemessenen Stromverbrauchswerte die theoretisch
 mögliche Batterielaufzeit des MSB430H bei Nutzung einer Batterie mit einer
 Kapazität von 1100mAh.
 
\end_layout

\begin_layout Standard
Wir schließen daraus, dass der Stromverbrauch proportional zur Taktfrequenz
 ist.
 Eine hohe Taktrate hat einen hohen und eine niedrige Taktrate einen niedrigen
 Stromverbrauch zur Folge.
\end_layout

\begin_layout Itemize
Batterielaufzeit:
\end_layout

\begin_deeper
\begin_layout Itemize
LFXT1CLK mit 4,09 kHz: 
\begin_inset Formula $\frac{1100\, mAh}{1,41\, mA}=774,65\, h=\underline{32,277\, d}$
\end_inset


\end_layout

\begin_layout Itemize
DCOCLK mit 7,3728 MHz: 
\begin_inset Formula $\frac{1100\, mAh}{5,87\, mA}=186,757\, h=\underline{7,7816\, d}$
\end_inset


\end_layout

\end_deeper
\begin_layout Subsection
Codezeile
\end_layout

\begin_layout Subsubsection
Bestimmen Sie messtechnisch mit dem Counter HM8021 die Abarbeitungzeit der
 folgenden Codezeile für die zwei Taktquellen DCOCLK (7,3728 MHz) und der
 LFXT1CLK (32 kHz).
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "basicstyle={\footnotesize},frame=single,language=C,numbers=left,tabsize=2"
inline false
status open

\begin_layout Plain Layout

P5OUT^= 0x20; // toggelt die Portleitung P5.5
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Wir messen die Frequenz an der Portleitung P5.5, die durch folgenden Code
 erzeugt wird:
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "basicstyle={\footnotesize},frame=single,language=C,numbers=left,tabsize=2"
inline false
status open

\begin_layout Plain Layout

P5OUT &= ~0x20;     // setzt die Portleitung P5.5 auf L 
\end_layout

\begin_layout Plain Layout

while (1) {
\end_layout

\begin_layout Plain Layout

    P5OUT^= 0x20;   // setzt P5.5 auf H
\end_layout

\begin_layout Plain Layout

    P5OUT^= 0x20;   // setzt P5.5 auf L
\end_layout

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Ausführungsfrequenz: 6,14059 kHz 
\begin_inset Formula $\rightarrow\,\frac{1}{6,14059}\cdot10^{-6}s=1,629ms$
\end_inset

 für die zweimalige Ausführung der Codezeile und damit 
\begin_inset Formula $0,8145ms$
\end_inset

 für eine Codezeile (unter Vernachlässigung des 
\begin_inset Quotes eld
\end_inset

jumps
\begin_inset Quotes erd
\end_inset

 der while-Schleife).
\end_layout

\end_body
\end_document
